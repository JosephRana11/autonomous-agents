name: Docker Build and Deploy

on:
  push:
    branches:
      - master
      - dev
    tags:
      - "*"

jobs:
  build_on_push:
    runs-on: self-hosted
    strategy:
      matrix:
        service:
          - autonomous-agent-manager
          - autonomous-agents-api
          - autonomous-agent
          - autonomous-agent-frontend
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: ${{ vars.DOCKER_REGISTRY_HOST }}
          username: ${{ secrets.DOCKER_REGISTRY_USERNAME }}
          password: ${{ secrets.DOCKER_REGISTRY_SECRET }}

      - name: Build and push Docker image
        id: docker_build
        env:
          SERVICE_NAME: ${{ matrix.service }}
        run: |
          REPO_NAME="${GITHUB_REPOSITORY##*/}"
          COMMON_TAG="${{ github.ref_name }}"

          if [[ "${{ github.ref }}" == "refs/heads/master" ]]; then
            COMMON_TAG="latest"
          fi

          IMAGE_NAME="${{ vars.DOCKER_REGISTRY_HOST }}/${REPO_NAME}/${SERVICE_NAME}"

          docker build -t "$IMAGE_NAME:${{ github.sha }}" -t "$IMAGE_NAME:$COMMON_TAG" ${SERVICE_NAME}

          docker push "$IMAGE_NAME:${{ github.sha }}"
          docker push "$IMAGE_NAME:$COMMON_TAG"

  deploy_services:
    needs: build_on_push
    strategy:
      matrix:
        service:
          - autonomous-agent-manager
          - autonomous-agents-api
          - autonomous-agent
      max-parallel: 1

    runs-on: self-hosted
    env:
      SERVICE_NAME: ${{ matrix.service }}
      GITHUB_REPOSITORY: ${{ github.repository }}

    steps:
      - name: Deploy built image
        id: docker_deploy
        run: |
          REPO_NAME="${GITHUB_REPOSITORY##*/}"
          IMAGE_NAME="${{ vars.DOCKER_REGISTRY_HOST }}/${REPO_NAME}/${SERVICE_NAME}"

          DEPLOY_TAG="${{ github.sha }}"

          if [[ "${{ github.ref }}" == "refs/tags/"* ]]; then
            DOCKER_HOST="${{ vars.PROD_HOST }}"
            DOCKER_STACK="${REPO_NAME}"
            DEPLOY_TAG="${{ github.ref_name }}"
          elif [[ "${{ github.ref }}" == "refs/heads/dev" ]]; then
            DOCKER_HOST="${{ vars.DEV_HOST }}"
            DOCKER_STACK="${{ vars.DEV_STACK }}"
          elif [[ "${{ github.ref }}" == "refs/heads/master" ]]; then
            DOCKER_HOST="${{ vars.STAGING_HOST }}"
            DOCKER_STACK="${REPO_NAME}_staging"
          fi

          docker --host "$DOCKER_HOST" service update --image $IMAGE_NAME:$DEPLOY_TAG ${DOCKER_STACK}_${SERVICE_NAME}
