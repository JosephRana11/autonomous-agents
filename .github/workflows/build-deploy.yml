name: Docker Build and Deploy

on:
  push:
    branches:
      - master
      - dev
    tags:
      - "*"

jobs:
  build_on_push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          - agent-manager
          - api
          - agent-node
          - frontend
          - agent-python
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: ${{ vars.DOCKER_REGISTRY_HOST }}
          username: ${{ secrets.DOCKER_REGISTRY_USERNAME }}
          password: ${{ secrets.DOCKER_REGISTRY_SECRET }}

      - name: Build and push Docker image
        id: docker_build
        env:
          SERVICE_NAME: ${{ matrix.service }}
        run: |
          REPO_NAME="${GITHUB_REPOSITORY##*/}"
          COMMON_TAG="${{ vars.DEV_IMAGE_TAG }}"
          API_ENDPOINT_HOST=${{ vars.DEV_API }}
          WS_URL=${{vars.DEV_WS_URL}}
          if [[ "${{ github.ref }}" == "refs/heads/master" ]]; then
            COMMON_TAG="latest"
            API_ENDPOINT_HOST=${{ vars.PROD_API }}
          fi

          IMAGE_NAME="${{ vars.DOCKER_REGISTRY_HOST }}/${{ vars.DOCKER_IMAGE_PREFIX }}/${REPO_NAME}-${SERVICE_NAME}"

          docker build --build-arg NEXT_PUBLIC_WS_URL=${WS_URL} --build-arg NEXT_PUBLIC_API_ENDPOINT_HOST=${API_ENDPOINT_HOST} -t "$IMAGE_NAME:${{ github.sha }}" -t "$IMAGE_NAME:$COMMON_TAG" ${SERVICE_NAME}

          docker push "$IMAGE_NAME:${{ github.sha }}"
          docker push "$IMAGE_NAME:$COMMON_TAG"

  deploy_services:
    needs: build_on_push
    strategy:
      matrix:
        service:
          - agent-manager
          - api
          - frontend
      max-parallel: 1

    runs-on: ubuntu-latest
    env:
      SERVICE_NAME: ${{ matrix.service }}
      GITHUB_REPOSITORY: ${{ github.repository }}

    steps:
      - name: Deploy built Image
        id: docker_deploy
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.BASTION_IPV4 }}
          username: ${{ secrets.BASTION_SSH_USER }}
          key: ${{ secrets.BASTION_SSH_KEY }}
          port: ${{ secrets.BASTION_SSH_PORT }}
          script: |
            SERVICE_NAME=$(echo ${{ matrix.service }} | tr '-' '_')
            GITHUB_REPOSITORY="${{github.repository}}"
            REPO_NAME="${GITHUB_REPOSITORY##*/}"
            IMAGE_NAME="${{ vars.DOCKER_REGISTRY_HOST }}/${{ vars.DOCKER_IMAGE_PREFIX }}/${REPO_NAME}-${SERVICE_NAME}"
            
            DEPLOY_TAG="${{ github.sha }}"
            
            if [[ "${{ github.ref }}" == "refs/heads/dev" ]]; then
            DOCKER_HOST="${{ vars.DEV_HOST }}"
            DOCKER_STACK="${{ vars.DEV_STACK }}"
            elif [[ "${{ github.ref }}" == "refs/heads/master" ]]; then
            DOCKER_HOST="${{ vars.PROD_HOST }}"
            DOCKER_STACK="${{ vars.PROD_STACK }}"
            fi
            echo docker --host $DOCKER_HOST service update --image $IMAGE_NAME:$DEPLOY_TAG ${DOCKER_STACK}_${SERVICE_NAME}
            docker --host $DOCKER_HOST service update --image $IMAGE_NAME:$DEPLOY_TAG ${DOCKER_STACK}_${SERVICE_NAME}
