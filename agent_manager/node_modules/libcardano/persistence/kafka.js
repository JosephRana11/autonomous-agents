"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.install_kafka_subscriber = void 0;
const kafka_1 = require("../lib/kafka");
const cbor_1 = require("cbor");
function install_kafka_subscriber(blockchain) {
    blockchain.pipeline("extendBlock", (event, cb) => {
        (0, kafka_1.sendKafkaMessage)('sancho_block', {
            key: Buffer.from(''),
            message: (0, cbor_1.encodeOne)(event.body)
        }, cb);
    });
    blockchain.pipeline("rollback", (from, to, cb) => {
        (0, kafka_1.sendKafkaMessage)('sancho_block', {
            key: (0, cbor_1.encodeOne)([0, from, to]),
            message: Buffer.from('')
        }, cb);
    });
}
exports.install_kafka_subscriber = install_kafka_subscriber;
//# sourceMappingURL=kafka.js.map