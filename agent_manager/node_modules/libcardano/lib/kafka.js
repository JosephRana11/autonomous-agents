"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.shutDownKafka = exports.sendKafkaMessage = void 0;
const kafka_node_1 = require("kafka-node");
class Kafka {
    constructor() {
        this.client = new kafka_node_1.KafkaClient({
            kafkaHost: process.env.KAFKA_BROKERS || 'kafka.sireto.dev:9092',
            maxAsyncRequests: 50,
        });
        // this.client.connect()
        this.producer = new kafka_node_1.Producer(this.client, { requireAcks: 1 });
    }
}
let kafkaInstance;
function sendKafkaMessage(topic, message, cb) {
    if (!kafkaInstance) {
        kafkaInstance = new Kafka();
    }
    kafkaInstance.producer.send([{ topic, messages: message instanceof Buffer ? message : new kafka_node_1.KeyedMessage(message.key, message.message) }], function (err, data) {
        if (err) {
            console.error('Error producing message:', err);
        }
        if (cb) {
            cb(err);
        }
    });
}
exports.sendKafkaMessage = sendKafkaMessage;
function shutDownKafka() {
    if (kafkaInstance) {
        kafkaInstance.client.close();
    }
}
exports.shutDownKafka = shutDownKafka;
//# sourceMappingURL=kafka.js.map